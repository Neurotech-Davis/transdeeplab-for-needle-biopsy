# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

*.npz

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/



# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/ data/test_vol_h5/case0008.npy.h5

data/test_vol_h5/case0035.npy.h5
data/test_vol_h5/case0001.npy.h5
ata/test_vol_h5/case0002.npy.h5
data/test_vol_h5/case0025.npy.h5
data/test_vol_h5/case0036.npy.h5
data/test_vol_h5/case0032.npy.h5
data/test_vol_h5/case0022.npy.h5
data/test_vol_h5/case0029.npy.h5
data/test_vol_h5/case0038.npy.h5
data/test_vol_h5/case0003.npy.h5
data/test_vol_h5/case0004.npy.h5
pretrained_ckpt/swin_224_7_4level.pth
pretrained_ckpt/swin_tiny_patch4_window7_224.pth
project_TransUNet/model/vit_checkpoint/imagenet21k/R50+ViT-B_16.npz
data/test_vol_h5/case0008.npy.h5
data/test_vol_h5/case0035.npy.h5
data/test_vol_h5/case0001.npy.h5
data/test_vol_h5/case0002.npy.h5
data/test_vol_h5/case0025.npy.h5
data/test_vol_h5/case0036.npy.h5
data/test_vol_h5/case0032.npy.h5
data/test_vol_h5/case0022.npy.h5
data/test_vol_h5/case0029.npy.h5
data/test_vol_h5/case0038.npy.h5
data/test_vol_h5/case0003.npy.h5
data/test_vol_h5/case0004.npy.h5
.git/objects/c5/b66dfbf0faab1e2649b3d36f1a21cc1a2aea69
.git/objects/c3/d58a59949b5b6e1c8e44d923cffcdce9290065
.git/objects/c3/0b8891577c205f073e297eb1688c42f44b87c6
.git/objects/35/9294b052bc1bc80093ef78ef113c64af02556e
.git/objects/ce/6df1dcf3e9d8ca13f403b33f53e9e7b67e638e
.git/objects/02/2207a25ca8e2ce6a41bf98697ebd0135aa8cb7
.git/objects/37/1fcc46b3bbefb32e8b97e7f714f4af29797ec8
.git/objects/da/bf3f69ad301fcf0ba8e8c175e2317436153152
.git/objects/2d/74a2b347536f5775ffb0cb444d9f6ac0f99877
.git/objects/af/ee41c17761cc54284bcd43c77be1e0ba87bf91
.git/objects/c6/76c994ba95b507e75b8350072202a3bc47527e
.git/objects/78/b9a8b59bbca5a4b42a4693bfa60806a8bd8958
.git/objects/75/483b757aee28f829324af11816e4e5d98c19b6
.git/objects/ca/e849a12a84904802ba7ea6bee2c596418667af
pretrained_ckpt/swin_224_7_4level.pth
pretrained_ckpt/swin_tiny_patch4_window7_224.pth
project_TransUNet/model/vit_checkpoint/imagenet21k/R50+ViT-B_16.npz